apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: {{ .Values.name }}
  labels:
    istio: {{ .Values.name }}
spec:
  version: {{ .Values.version }}
  proxy:
    runtime:
      container:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 128Mi
  tracing:
    type: Jaeger
    sampling: 1000
  gateways:
    openshiftRoute:
      enabled: false
    {{- if .Values.gateways.egress.enabled }}
    egress:
      service:
        type: ClusterIP
        ports:
        - name: status-port
          port: 15021
          targetPort: 15021
        - name: http2
          port: 80
          targetPort: 8080
        - name: https
          port: 443
          targetPort: 8443
    {{- else }}
    egress:
      enabled: false
    {{- end }}
    ingress:
      service:
        type: LoadBalancer
        metadata:
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
            service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
            service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
            service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "4"
            service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
            service.beta.kubernetes.io/aws-load-balancer-internal: "true"
        ports:
        - name: status-port
          port: 15021
          targetPort: 15021
        - name: http2
          port: 80
          targetPort: 8080
        - name: https
          port: 443
          targetPort: 8443
      meshExpansionPorts: []
  policy:
    type: Istiod
  addons:
    grafana:
      enabled: true
      install:
        config:
          env: {}
          envSecrets: {}
        service:
          ingress:
            contextPath: /grafana
            tls:
              termination: reencrypt
    jaeger:
      name: jaeger
      install:
        storage:
          type: Elasticsearch # or Memory
          memory:
            maxTraces: 100000
          elasticsearch:
            nodeCount: 3
            storage: {}
            redundancyPolicy: SingleRedundancy
            indexCleaner: {}
        ingress: {} # jaeger ingress configuration
    kiali:
      name: kiali
      enabled: true
      install:
        dashboard:
          viewOnly: false
          enableGrafana: true
          enableTracing: true
          enablePrometheus: true
      service:
        ingress:
          contextPath: /kiali
    prometheus:
      enabled: true
  telemetry:
    type: Istiod
  runtime:
    components:
      pilot:
        deployment:
          replicas: 1
        pod:
          affinity: {}
        container:
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 128Mi
      grafana:
        deployment: {}
        pod: {}
      kiali:
        deployment: {}
        pod: {}
  security:
    identity:
      type: ThirdParty
      thirdParty:
        audience: istio-ca
  techPreview:
    meshConfig:
      accessLogEncoding: JSON
      accessLogFile: /dev/stdout
---